(self["webpackChunkringtone"] = self["webpackChunkringtone"] || []).push([["node_modules_tinymce_plugins_nonbreaking_index_js"],{

/***/ "./node_modules/tinymce/plugins/nonbreaking/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/tinymce/plugins/nonbreaking/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// Exports the "nonbreaking" plugin for usage with module loaders
// Usage:
//   CommonJS:
//     require('tinymce/plugins/nonbreaking')
//   ES2015:
//     import 'tinymce/plugins/nonbreaking'
__webpack_require__(/*! ./plugin.js */ "./node_modules/tinymce/plugins/nonbreaking/plugin.js");

/***/ }),

/***/ "./node_modules/tinymce/plugins/nonbreaking/plugin.js":
/*!************************************************************!*\
  !*** ./node_modules/tinymce/plugins/nonbreaking/plugin.js ***!
  \************************************************************/
/***/ (() => {

/**
 * Copyright (c) Tiny Technologies, Inc. All rights reserved.
 * Licensed under the LGPL or a commercial license.
 * For LGPL see License.txt in the project root for license information.
 * For commercial licenses see https://www.tiny.cloud/
 *
 * Version: 5.8.1 (2021-05-20)
 */
(function () {
    'use strict';

    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');

    var getKeyboardSpaces = function (editor) {
      var spaces = editor.getParam('nonbreaking_force_tab', 0);
      if (typeof spaces === 'boolean') {
        return spaces === true ? 3 : 0;
      } else {
        return spaces;
      }
    };
    var wrapNbsps = function (editor) {
      return editor.getParam('nonbreaking_wrap', true, 'boolean');
    };

    var stringRepeat = function (string, repeats) {
      var str = '';
      for (var index = 0; index < repeats; index++) {
        str += string;
      }
      return str;
    };
    var isVisualCharsEnabled = function (editor) {
      return editor.plugins.visualchars ? editor.plugins.visualchars.isEnabled() : false;
    };
    var insertNbsp = function (editor, times) {
      var classes = function () {
        return isVisualCharsEnabled(editor) ? 'mce-nbsp-wrap mce-nbsp' : 'mce-nbsp-wrap';
      };
      var nbspSpan = function () {
        return '<span class="' + classes() + '" contenteditable="false">' + stringRepeat('&nbsp;', times) + '</span>';
      };
      var shouldWrap = wrapNbsps(editor);
      var html = shouldWrap || editor.plugins.visualchars ? nbspSpan() : stringRepeat('&nbsp;', times);
      editor.undoManager.transact(function () {
        return editor.insertContent(html);
      });
    };

    var register = function (editor) {
      editor.addCommand('mceNonBreaking', function () {
        insertNbsp(editor, 1);
      });
    };

    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');

    var setup = function (editor) {
      var spaces = getKeyboardSpaces(editor);
      if (spaces > 0) {
        editor.on('keydown', function (e) {
          if (e.keyCode === global$1.TAB && !e.isDefaultPrevented()) {
            if (e.shiftKey) {
              return;
            }
            e.preventDefault();
            e.stopImmediatePropagation();
            insertNbsp(editor, spaces);
          }
        });
      }
    };

    var register$1 = function (editor) {
      editor.ui.registry.addButton('nonbreaking', {
        icon: 'non-breaking',
        tooltip: 'Nonbreaking space',
        onAction: function () {
          return editor.execCommand('mceNonBreaking');
        }
      });
      editor.ui.registry.addMenuItem('nonbreaking', {
        icon: 'non-breaking',
        text: 'Nonbreaking space',
        onAction: function () {
          return editor.execCommand('mceNonBreaking');
        }
      });
    };

    function Plugin () {
      global.add('nonbreaking', function (editor) {
        register(editor);
        register$1(editor);
        setup(editor);
      });
    }

    Plugin();

}());


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX3RpbnltY2VfcGx1Z2luc19ub25icmVha2luZ19pbmRleF9qcy5jaHVuay5qcyIsInNvdXJjZXMiOlsiL1VzZXJzL2xpdXlhbmcvcHJvamVjdHMvcmluZ3RvbmVfbmV3L25vZGVfbW9kdWxlcy90aW55bWNlL3BsdWdpbnMvbm9uYnJlYWtpbmcvaW5kZXguanMiLCIvVXNlcnMvbGl1eWFuZy9wcm9qZWN0cy9yaW5ndG9uZV9uZXcvbm9kZV9tb2R1bGVzL3RpbnltY2UvcGx1Z2lucy9ub25icmVha2luZy9wbHVnaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRXhwb3J0cyB0aGUgXCJub25icmVha2luZ1wiIHBsdWdpbiBmb3IgdXNhZ2Ugd2l0aCBtb2R1bGUgbG9hZGVyc1xuLy8gVXNhZ2U6XG4vLyAgIENvbW1vbkpTOlxuLy8gICAgIHJlcXVpcmUoJ3RpbnltY2UvcGx1Z2lucy9ub25icmVha2luZycpXG4vLyAgIEVTMjAxNTpcbi8vICAgICBpbXBvcnQgJ3RpbnltY2UvcGx1Z2lucy9ub25icmVha2luZydcbnJlcXVpcmUoJy4vcGx1Z2luLmpzJyk7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIFRpbnkgVGVjaG5vbG9naWVzLCBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTEdQTCBvciBhIGNvbW1lcmNpYWwgbGljZW5zZS5cbiAqIEZvciBMR1BMIHNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICogRm9yIGNvbW1lcmNpYWwgbGljZW5zZXMgc2VlIGh0dHBzOi8vd3d3LnRpbnkuY2xvdWQvXG4gKlxuICogVmVyc2lvbjogNS44LjEgKDIwMjEtMDUtMjApXG4gKi9cbihmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgdmFyIGdsb2JhbCA9IHRpbnltY2UudXRpbC5Ub29scy5yZXNvbHZlKCd0aW55bWNlLlBsdWdpbk1hbmFnZXInKTtcblxuICAgIHZhciBnZXRLZXlib2FyZFNwYWNlcyA9IGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgIHZhciBzcGFjZXMgPSBlZGl0b3IuZ2V0UGFyYW0oJ25vbmJyZWFraW5nX2ZvcmNlX3RhYicsIDApO1xuICAgICAgaWYgKHR5cGVvZiBzcGFjZXMgPT09ICdib29sZWFuJykge1xuICAgICAgICByZXR1cm4gc3BhY2VzID09PSB0cnVlID8gMyA6IDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gc3BhY2VzO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHdyYXBOYnNwcyA9IGZ1bmN0aW9uIChlZGl0b3IpIHtcbiAgICAgIHJldHVybiBlZGl0b3IuZ2V0UGFyYW0oJ25vbmJyZWFraW5nX3dyYXAnLCB0cnVlLCAnYm9vbGVhbicpO1xuICAgIH07XG5cbiAgICB2YXIgc3RyaW5nUmVwZWF0ID0gZnVuY3Rpb24gKHN0cmluZywgcmVwZWF0cykge1xuICAgICAgdmFyIHN0ciA9ICcnO1xuICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHJlcGVhdHM7IGluZGV4KyspIHtcbiAgICAgICAgc3RyICs9IHN0cmluZztcbiAgICAgIH1cbiAgICAgIHJldHVybiBzdHI7XG4gICAgfTtcbiAgICB2YXIgaXNWaXN1YWxDaGFyc0VuYWJsZWQgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICByZXR1cm4gZWRpdG9yLnBsdWdpbnMudmlzdWFsY2hhcnMgPyBlZGl0b3IucGx1Z2lucy52aXN1YWxjaGFycy5pc0VuYWJsZWQoKSA6IGZhbHNlO1xuICAgIH07XG4gICAgdmFyIGluc2VydE5ic3AgPSBmdW5jdGlvbiAoZWRpdG9yLCB0aW1lcykge1xuICAgICAgdmFyIGNsYXNzZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBpc1Zpc3VhbENoYXJzRW5hYmxlZChlZGl0b3IpID8gJ21jZS1uYnNwLXdyYXAgbWNlLW5ic3AnIDogJ21jZS1uYnNwLXdyYXAnO1xuICAgICAgfTtcbiAgICAgIHZhciBuYnNwU3BhbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICc8c3BhbiBjbGFzcz1cIicgKyBjbGFzc2VzKCkgKyAnXCIgY29udGVudGVkaXRhYmxlPVwiZmFsc2VcIj4nICsgc3RyaW5nUmVwZWF0KCcmbmJzcDsnLCB0aW1lcykgKyAnPC9zcGFuPic7XG4gICAgICB9O1xuICAgICAgdmFyIHNob3VsZFdyYXAgPSB3cmFwTmJzcHMoZWRpdG9yKTtcbiAgICAgIHZhciBodG1sID0gc2hvdWxkV3JhcCB8fCBlZGl0b3IucGx1Z2lucy52aXN1YWxjaGFycyA/IG5ic3BTcGFuKCkgOiBzdHJpbmdSZXBlYXQoJyZuYnNwOycsIHRpbWVzKTtcbiAgICAgIGVkaXRvci51bmRvTWFuYWdlci50cmFuc2FjdChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBlZGl0b3IuaW5zZXJ0Q29udGVudChodG1sKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgcmVnaXN0ZXIgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICBlZGl0b3IuYWRkQ29tbWFuZCgnbWNlTm9uQnJlYWtpbmcnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGluc2VydE5ic3AoZWRpdG9yLCAxKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZ2xvYmFsJDEgPSB0aW55bWNlLnV0aWwuVG9vbHMucmVzb2x2ZSgndGlueW1jZS51dGlsLlZLJyk7XG5cbiAgICB2YXIgc2V0dXAgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICB2YXIgc3BhY2VzID0gZ2V0S2V5Ym9hcmRTcGFjZXMoZWRpdG9yKTtcbiAgICAgIGlmIChzcGFjZXMgPiAwKSB7XG4gICAgICAgIGVkaXRvci5vbigna2V5ZG93bicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gZ2xvYmFsJDEuVEFCICYmICFlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICBpZiAoZS5zaGlmdEtleSkge1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgaW5zZXJ0TmJzcChlZGl0b3IsIHNwYWNlcyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIHJlZ2lzdGVyJDEgPSBmdW5jdGlvbiAoZWRpdG9yKSB7XG4gICAgICBlZGl0b3IudWkucmVnaXN0cnkuYWRkQnV0dG9uKCdub25icmVha2luZycsIHtcbiAgICAgICAgaWNvbjogJ25vbi1icmVha2luZycsXG4gICAgICAgIHRvb2x0aXA6ICdOb25icmVha2luZyBzcGFjZScsXG4gICAgICAgIG9uQWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGVkaXRvci5leGVjQ29tbWFuZCgnbWNlTm9uQnJlYWtpbmcnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBlZGl0b3IudWkucmVnaXN0cnkuYWRkTWVudUl0ZW0oJ25vbmJyZWFraW5nJywge1xuICAgICAgICBpY29uOiAnbm9uLWJyZWFraW5nJyxcbiAgICAgICAgdGV4dDogJ05vbmJyZWFraW5nIHNwYWNlJyxcbiAgICAgICAgb25BY3Rpb246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gZWRpdG9yLmV4ZWNDb21tYW5kKCdtY2VOb25CcmVha2luZycpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gUGx1Z2luICgpIHtcbiAgICAgIGdsb2JhbC5hZGQoJ25vbmJyZWFraW5nJywgZnVuY3Rpb24gKGVkaXRvcikge1xuICAgICAgICByZWdpc3RlcihlZGl0b3IpO1xuICAgICAgICByZWdpc3RlciQxKGVkaXRvcik7XG4gICAgICAgIHNldHVwKGVkaXRvcik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBQbHVnaW4oKTtcblxufSgpKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0E7Ozs7Ozs7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QTs7QSIsInNvdXJjZVJvb3QiOiIifQ==