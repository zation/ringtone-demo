{"version":3,"sources":["/Users/liuyang/projects/ringtone_new/node_modules/tinymce/plugins/advlist/index.js","/Users/liuyang/projects/ringtone_new/node_modules/tinymce/plugins/advlist/plugin.js"],"names":["eq","call","id","global","tinymce","util","Tools","resolve","applyListFormat","editor","listName","styleValue","cmd","execCommand","global$1","constant","value","never","always","none","NONE","o","isNone","fold","n","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","a","constant_a","self","me","f","s","v","elementEq","b","isTableCellNode","node","test","nodeName","isWithinList","e","tableCellIndex","list","predicate","index","length","findIndex","parents","slice","lists","grep","elm","$","contains","getBody","isChildOfBody","isListNode","addSplitButton","tooltip","styles","ui","registry","icon","presets","columns","fetch","callback","type","text","replace","chr","toUpperCase","styleValueToText","onAction","onItemAction","_splitButtonApi","select","listElm","dom","getParent","selection","getNode","Optional","getStyle","getSelectedStyleType","listStyle","onSetup","api","nodeChangeHandler","setActive","on","off","addControl","_styles","addToggleButton","active","addButton","add","hasPlugin","getParam","split","getNumberStyles","getBulletStyles","register$1","addCommand","register","console","error"],"mappings":"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","file":"400.8188393e.chunk.js","sourcesContent":["// Exports the \"advlist\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/advlist')\n//   ES2015:\n//     import 'tinymce/plugins/advlist'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.8.1 (2021-05-20)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var applyListFormat = function (editor, listName, styleValue) {\n      var cmd = listName === 'UL' ? 'InsertUnorderedList' : 'InsertOrderedList';\n      editor.execCommand(cmd, false, styleValue === false ? null : { 'list-style-type': styleValue });\n    };\n\n    var register = function (editor) {\n      editor.addCommand('ApplyUnorderedListStyle', function (ui, value) {\n        applyListFormat(editor, 'UL', value['list-style-type']);\n      });\n      editor.addCommand('ApplyOrderedListStyle', function (ui, value) {\n        applyListFormat(editor, 'OL', value['list-style-type']);\n      });\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getNumberStyles = function (editor) {\n      var styles = editor.getParam('advlist_number_styles', 'default,lower-alpha,lower-greek,lower-roman,upper-alpha,upper-roman');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n    var getBulletStyles = function (editor) {\n      var styles = editor.getParam('advlist_bullet_styles', 'default,circle,square');\n      return styles ? styles.split(/[ ,]/) : [];\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var isChildOfBody = function (editor, elm) {\n      return editor.$.contains(editor.getBody(), elm);\n    };\n    var isTableCellNode = function (node) {\n      return node && /^(TH|TD)$/.test(node.nodeName);\n    };\n    var isListNode = function (editor) {\n      return function (node) {\n        return node && /^(OL|UL|DL)$/.test(node.nodeName) && isChildOfBody(editor, node);\n      };\n    };\n    var getSelectedStyleType = function (editor) {\n      var listElm = editor.dom.getParent(editor.selection.getNode(), 'ol,ul');\n      var style = editor.dom.getStyle(listElm, 'listStyleType');\n      return Optional.from(style);\n    };\n\n    var findIndex = function (list, predicate) {\n      for (var index = 0; index < list.length; index++) {\n        var element = list[index];\n        if (predicate(element)) {\n          return index;\n        }\n      }\n      return -1;\n    };\n    var styleValueToText = function (styleValue) {\n      return styleValue.replace(/\\-/g, ' ').replace(/\\b\\w/g, function (chr) {\n        return chr.toUpperCase();\n      });\n    };\n    var isWithinList = function (editor, e, nodeName) {\n      var tableCellIndex = findIndex(e.parents, isTableCellNode);\n      var parents = tableCellIndex !== -1 ? e.parents.slice(0, tableCellIndex) : e.parents;\n      var lists = global$1.grep(parents, isListNode(editor));\n      return lists.length > 0 && lists[0].nodeName === nodeName;\n    };\n    var addSplitButton = function (editor, id, tooltip, cmd, nodeName, styles) {\n      editor.ui.registry.addSplitButton(id, {\n        tooltip: tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        presets: 'listpreview',\n        columns: 3,\n        fetch: function (callback) {\n          var items = global$1.map(styles, function (styleValue) {\n            var iconStyle = nodeName === 'OL' ? 'num' : 'bull';\n            var iconName = styleValue === 'disc' || styleValue === 'decimal' ? 'default' : styleValue;\n            var itemValue = styleValue === 'default' ? '' : styleValue;\n            var displayText = styleValueToText(styleValue);\n            return {\n              type: 'choiceitem',\n              value: itemValue,\n              icon: 'list-' + iconStyle + '-' + iconName,\n              text: displayText\n            };\n          });\n          callback(items);\n        },\n        onAction: function () {\n          return editor.execCommand(cmd);\n        },\n        onItemAction: function (_splitButtonApi, value) {\n          applyListFormat(editor, nodeName, value);\n        },\n        select: function (value) {\n          var listStyleType = getSelectedStyleType(editor);\n          return listStyleType.map(function (listStyle) {\n            return value === listStyle;\n          }).getOr(false);\n        },\n        onSetup: function (api) {\n          var nodeChangeHandler = function (e) {\n            api.setActive(isWithinList(editor, e, nodeName));\n          };\n          editor.on('NodeChange', nodeChangeHandler);\n          return function () {\n            return editor.off('NodeChange', nodeChangeHandler);\n          };\n        }\n      });\n    };\n    var addButton = function (editor, id, tooltip, cmd, nodeName, _styles) {\n      editor.ui.registry.addToggleButton(id, {\n        active: false,\n        tooltip: tooltip,\n        icon: nodeName === 'OL' ? 'ordered-list' : 'unordered-list',\n        onSetup: function (api) {\n          var nodeChangeHandler = function (e) {\n            api.setActive(isWithinList(editor, e, nodeName));\n          };\n          editor.on('NodeChange', nodeChangeHandler);\n          return function () {\n            return editor.off('NodeChange', nodeChangeHandler);\n          };\n        },\n        onAction: function () {\n          return editor.execCommand(cmd);\n        }\n      });\n    };\n    var addControl = function (editor, id, tooltip, cmd, nodeName, styles) {\n      if (styles.length > 1) {\n        addSplitButton(editor, id, tooltip, cmd, nodeName, styles);\n      } else {\n        addButton(editor, id, tooltip, cmd, nodeName);\n      }\n    };\n    var register$1 = function (editor) {\n      addControl(editor, 'numlist', 'Numbered list', 'InsertOrderedList', 'OL', getNumberStyles(editor));\n      addControl(editor, 'bullist', 'Bullet list', 'InsertUnorderedList', 'UL', getBulletStyles(editor));\n    };\n\n    function Plugin () {\n      global.add('advlist', function (editor) {\n        if (editor.hasPlugin('lists')) {\n          register$1(editor);\n          register(editor);\n        } else {\n          console.error('Please use the Lists plugin together with the Advanced List plugin.');\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"],"sourceRoot":""}